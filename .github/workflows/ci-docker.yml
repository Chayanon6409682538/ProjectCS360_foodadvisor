name: CI - Test Source Code and Docker Image
 
on:
 # push:
 #   branches: [master, dev, workflow ]
 #   paths-ignore:
 #     - 'README.md'
 # pull_request:
 #   branches: [master, dev, workflow ]
 #   paths-ignore:
 #     - 'README.md'
  workflow_dispatch:


jobs:
  # Step 1: Test Source Code
  test-source-code:

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Check code
        uses: actions/checkout@v4

      - name: Setup node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies in api
        run: yarn
        working-directory: ./api

      - name: Build project  
        run: yarn build
        working-directory: ./api

      - name: Install dependencies in client
        run: yarn
        working-directory: ./client

      - name: Test unit test client
        run: yarn test
        working-directory: ./client

      # - name: Test api
      #   run: 
      #     yarn test
      #     echo "my STRAPI_ADMIN_CLIENT_PREVIEW_SECRET is ${{ secrets.STRAPI_ADMIN_CLIENT_PREVIEW_SECRET }}"
      #   working-directory: ./api

  # Step 2: Build Docker Image
  build-docker:
    needs: test-source-code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }} # Use the token here

      - name: Build Docker Image Api
        run: |
          docker build -f api/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/cs360_foodadvisor_api:latest ./api


      - name: Push Docker Image Api to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/cs360_foodadvisor_api:latest

      - name: Build Docker Image Client
        run: |
          docker build -f client/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/cs360_foodadvisor_client:latest ./client

      - name: Push Docker Image Client to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/cs360_foodadvisor_client:latest

  # Step 3: Test Docker Image
  test-docker-image:
    needs: build-docker
    runs-on: ubuntu-latest

    steps:
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }} # Use the token here

      - name: Pull and Run Docker Image Api
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/cs360_foodadvisor_api:latest
          docker run -d --name test-container-foodadvisor-api ${{ secrets.DOCKER_USERNAME }}/cs360_foodadvisor_api:latest

      - name: Pull and Run Docker Image Client
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/cs360_foodadvisor_client:latest
          docker run -d --name test-container-foodadvisor-client ${{ secrets.DOCKER_USERNAME }}/cs360_foodadvisor_client:latest

      - name: Install dependencies in client
        run: |
          docker exec test-container-foodadvisor-client yarn

      - name: Run Automated Tests in Docker Container
        run: |
          docker exec test-container-foodadvisor-client yarn test 

      - name: Clean Up Docker Container
        run: |
          docker stop test-container-foodadvisor-client
          docker rm test-container-foodadvisor-client
          docker stop test-container-foodadvisor-api
          docker rm test-container-foodadvisor-api
